//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 29/1/2025 9:33:11 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace Sistema.Proctor.Data.Entities
{
    public partial class ResultadosProctor : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _Idresultado;

        private int? _Idensayo;

        private float? _AguaAgregada;

        private float? _PesoMoldeMaterialHumedo;

        private float? _PesoMolde;

        private float? _PesoMaterialHumedo;

        private float? _VolumenMolde;

        private float? _DensidadHumeda;

        private string _TaraNumero;

        private float? _TaraMaterialHumedo;

        private float? _TaraMaterialSeco;

        private float? _PesoAgua;

        private float? _PesoTara;

        private float? _PesoSueloSeco;

        private float? _ContenidoHumedad;

        private float? _DensidadSeca;

        private EnsayoProctor _EnsayoProctor;

        public ResultadosProctor()
        {
            OnCreated();
        }

        public int Idresultado
        {
            get
            {
                return this._Idresultado;
            }
            set
            {
                if (this._Idresultado != value)
                {
                    this.SendPropertyChanging("Idresultado");
                    this._Idresultado = value;
                    this.SendPropertyChanged("Idresultado");
                }
            }
        }

        public int? Idensayo
        {
            get
            {
                return this._Idensayo;
            }
            set
            {
                if (this._Idensayo != value)
                {
                    this.SendPropertyChanging("Idensayo");
                    this._Idensayo = value;
                    this.SendPropertyChanged("Idensayo");
                }
            }
        }

        public float? AguaAgregada
        {
            get
            {
                return this._AguaAgregada;
            }
            set
            {
                if (this._AguaAgregada != value)
                {
                    this.SendPropertyChanging("AguaAgregada");
                    this._AguaAgregada = value;
                    this.SendPropertyChanged("AguaAgregada");
                }
            }
        }

        public float? PesoMoldeMaterialHumedo
        {
            get
            {
                return this._PesoMoldeMaterialHumedo;
            }
            set
            {
                if (this._PesoMoldeMaterialHumedo != value)
                {
                    this.SendPropertyChanging("PesoMoldeMaterialHumedo");
                    this._PesoMoldeMaterialHumedo = value;
                    this.SendPropertyChanged("PesoMoldeMaterialHumedo");
                }
            }
        }

        public float? PesoMolde
        {
            get
            {
                return this._PesoMolde;
            }
            set
            {
                if (this._PesoMolde != value)
                {
                    this.SendPropertyChanging("PesoMolde");
                    this._PesoMolde = value;
                    this.SendPropertyChanged("PesoMolde");
                }
            }
        }

        public float? PesoMaterialHumedo
        {
            get
            {
                return this._PesoMaterialHumedo;
            }
            set
            {
                if (this._PesoMaterialHumedo != value)
                {
                    this.SendPropertyChanging("PesoMaterialHumedo");
                    this._PesoMaterialHumedo = value;
                    this.SendPropertyChanged("PesoMaterialHumedo");
                }
            }
        }

        public float? VolumenMolde
        {
            get
            {
                return this._VolumenMolde;
            }
            set
            {
                if (this._VolumenMolde != value)
                {
                    this.SendPropertyChanging("VolumenMolde");
                    this._VolumenMolde = value;
                    this.SendPropertyChanged("VolumenMolde");
                }
            }
        }

        public float? DensidadHumeda
        {
            get
            {
                return this._DensidadHumeda;
            }
            set
            {
                if (this._DensidadHumeda != value)
                {
                    this.SendPropertyChanging("DensidadHumeda");
                    this._DensidadHumeda = value;
                    this.SendPropertyChanged("DensidadHumeda");
                }
            }
        }

        public string TaraNumero
        {
            get
            {
                return this._TaraNumero;
            }
            set
            {
                if (this._TaraNumero != value)
                {
                    this.SendPropertyChanging("TaraNumero");
                    this._TaraNumero = value;
                    this.SendPropertyChanged("TaraNumero");
                }
            }
        }

        public float? TaraMaterialHumedo
        {
            get
            {
                return this._TaraMaterialHumedo;
            }
            set
            {
                if (this._TaraMaterialHumedo != value)
                {
                    this.SendPropertyChanging("TaraMaterialHumedo");
                    this._TaraMaterialHumedo = value;
                    this.SendPropertyChanged("TaraMaterialHumedo");
                }
            }
        }

        public float? TaraMaterialSeco
        {
            get
            {
                return this._TaraMaterialSeco;
            }
            set
            {
                if (this._TaraMaterialSeco != value)
                {
                    this.SendPropertyChanging("TaraMaterialSeco");
                    this._TaraMaterialSeco = value;
                    this.SendPropertyChanged("TaraMaterialSeco");
                }
            }
        }

        public float? PesoAgua
        {
            get
            {
                return this._PesoAgua;
            }
            set
            {
                if (this._PesoAgua != value)
                {
                    this.SendPropertyChanging("PesoAgua");
                    this._PesoAgua = value;
                    this.SendPropertyChanged("PesoAgua");
                }
            }
        }

        public float? PesoTara
        {
            get
            {
                return this._PesoTara;
            }
            set
            {
                if (this._PesoTara != value)
                {
                    this.SendPropertyChanging("PesoTara");
                    this._PesoTara = value;
                    this.SendPropertyChanged("PesoTara");
                }
            }
        }

        public float? PesoSueloSeco
        {
            get
            {
                return this._PesoSueloSeco;
            }
            set
            {
                if (this._PesoSueloSeco != value)
                {
                    this.SendPropertyChanging("PesoSueloSeco");
                    this._PesoSueloSeco = value;
                    this.SendPropertyChanged("PesoSueloSeco");
                }
            }
        }

        public float? ContenidoHumedad
        {
            get
            {
                return this._ContenidoHumedad;
            }
            set
            {
                if (this._ContenidoHumedad != value)
                {
                    this.SendPropertyChanging("ContenidoHumedad");
                    this._ContenidoHumedad = value;
                    this.SendPropertyChanged("ContenidoHumedad");
                }
            }
        }

        public float? DensidadSeca
        {
            get
            {
                return this._DensidadSeca;
            }
            set
            {
                if (this._DensidadSeca != value)
                {
                    this.SendPropertyChanging("DensidadSeca");
                    this._DensidadSeca = value;
                    this.SendPropertyChanged("DensidadSeca");
                }
            }
        }

        public virtual EnsayoProctor EnsayoProctor
        {
            get
            {
                return this._EnsayoProctor;
            }
            set
            {
                if (this._EnsayoProctor != value)
                {
                    this.SendPropertyChanging("EnsayoProctor");
                    this._EnsayoProctor = value;
                    this.SendPropertyChanged("EnsayoProctor");
                }
            }
        }

        #region Extensibility Method Definitions

        partial void OnCreated();

        public override bool Equals(object obj)
        {
          ResultadosProctor toCompare = obj as ResultadosProctor;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Idresultado, toCompare.Idresultado))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Idresultado.GetHashCode();
          return hashCode;
        }

        #endregion

        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
