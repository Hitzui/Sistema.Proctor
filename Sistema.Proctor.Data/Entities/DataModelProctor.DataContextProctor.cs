//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2/3/2025 5:02:30 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;
using MySql.EntityFrameworkCore.Extensions;

namespace Sistema.Proctor.Data.Entities
{

    public partial class DataContextProctor : DbContext
    {

        public DataContextProctor() :
            base()
        {
            OnCreated();
        }

        public DataContextProctor(DbContextOptions<DataContextProctor> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                optionsBuilder.UseMySQL(GetConnectionString("DefaultConnection"));
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        private static string GetConnectionString(string connectionStringName)
        {
            var configurationBuilder = new ConfigurationBuilder().AddJsonFile("appsettings.json", optional: true, reloadOnChange: false);
            var configuration = configurationBuilder.Build();
            return configuration.GetConnectionString(connectionStringName);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<Parametro> Parametros
        {
            get;
            set;
        }

        public virtual DbSet<TipoFalla> TipoFallas
        {
            get;
            set;
        }

        public virtual DbSet<UnidadMedida> UnidadMedidas
        {
            get;
            set;
        }

        public virtual DbSet<Empleado> Empleados
        {
            get;
            set;
        }

        public virtual DbSet<Proyecto> Proyectos
        {
            get;
            set;
        }

        public virtual DbSet<Ensayo> Ensayos
        {
            get;
            set;
        }

        public virtual DbSet<Muestra> Muestras
        {
            get;
            set;
        }

        public virtual DbSet<Cliente> Clientes
        {
            get;
            set;
        }

        public virtual DbSet<Usuario> Usuarios
        {
            get;
            set;
        }

        public virtual DbSet<ResultadosProctor> ResultadosProctors
        {
            get;
            set;
        }

        public virtual DbSet<EnsayoProctor> EnsayoProctors
        {
            get;
            set;
        }

        public virtual DbSet<TipoEspeciman> TipoEspecimen
        {
            get;
            set;
        }

        public virtual DbSet<TamanoEspeciman> TamanoEspecimen
        {
            get;
            set;
        }

        public virtual DbSet<Resultado> Resultados
        {
            get;
            set;
        }

        public virtual DbSet<Entry> Entries
        {
            get;
            set;
        }

        public virtual DbSet<TipoEnsayo> TipoEnsayos
        {
            get;
            set;
        }

        public virtual DbSet<Empresa> Empresas
        {
            get;
            set;
        }

        public virtual DbSet<EnsayoHumedad> EnsayoHumedads
        {
            get;
            set;
        }

        public virtual DbSet<ResultadoHumedad> ResultadoHumedads
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.ParametroMapping(modelBuilder);
            this.CustomizeParametroMapping(modelBuilder);

            this.TipoFallaMapping(modelBuilder);
            this.CustomizeTipoFallaMapping(modelBuilder);

            this.UnidadMedidaMapping(modelBuilder);
            this.CustomizeUnidadMedidaMapping(modelBuilder);

            this.EmpleadoMapping(modelBuilder);
            this.CustomizeEmpleadoMapping(modelBuilder);

            this.ProyectoMapping(modelBuilder);
            this.CustomizeProyectoMapping(modelBuilder);

            this.EnsayoMapping(modelBuilder);
            this.CustomizeEnsayoMapping(modelBuilder);

            this.MuestraMapping(modelBuilder);
            this.CustomizeMuestraMapping(modelBuilder);

            this.ClienteMapping(modelBuilder);
            this.CustomizeClienteMapping(modelBuilder);

            this.UsuarioMapping(modelBuilder);
            this.CustomizeUsuarioMapping(modelBuilder);

            this.ResultadosProctorMapping(modelBuilder);
            this.CustomizeResultadosProctorMapping(modelBuilder);

            this.EnsayoProctorMapping(modelBuilder);
            this.CustomizeEnsayoProctorMapping(modelBuilder);

            this.TipoEspecimanMapping(modelBuilder);
            this.CustomizeTipoEspecimanMapping(modelBuilder);

            this.TamanoEspecimanMapping(modelBuilder);
            this.CustomizeTamanoEspecimanMapping(modelBuilder);

            this.ResultadoMapping(modelBuilder);
            this.CustomizeResultadoMapping(modelBuilder);

            this.EntryMapping(modelBuilder);
            this.CustomizeEntryMapping(modelBuilder);

            this.TipoEnsayoMapping(modelBuilder);
            this.CustomizeTipoEnsayoMapping(modelBuilder);

            this.EmpresaMapping(modelBuilder);
            this.CustomizeEmpresaMapping(modelBuilder);

            this.EnsayoHumedadMapping(modelBuilder);
            this.CustomizeEnsayoHumedadMapping(modelBuilder);

            this.ResultadoHumedadMapping(modelBuilder);
            this.CustomizeResultadoHumedadMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region Parametro Mapping

        private void ParametroMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Parametro>().ToTable(@"parametros", @"dicesa");
            modelBuilder.Entity<Parametro>().Property(x => x.Idparametro).HasColumnName(@"idparametro").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd().HasPrecision(20, 0);
            modelBuilder.Entity<Parametro>().Property(x => x.CodigoProyecto).HasColumnName(@"codigo_proyecto").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Parametro>().Property(x => x.SiguienteCodigoProyecto).HasColumnName(@"siguiente_codigo_proyecto").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(11, 0);
            modelBuilder.Entity<Parametro>().HasKey(@"Idparametro");
        }

        partial void CustomizeParametroMapping(ModelBuilder modelBuilder);

        #endregion

        #region TipoFalla Mapping

        private void TipoFallaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoFalla>().ToTable(@"tipo_falla", @"dicesa");
            modelBuilder.Entity<TipoFalla>().Property(x => x.IdTipoFalla).HasColumnName(@"id_tipo_falla").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<TipoFalla>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<TipoFalla>().HasKey(@"IdTipoFalla");
        }

        partial void CustomizeTipoFallaMapping(ModelBuilder modelBuilder);

        #endregion

        #region UnidadMedida Mapping

        private void UnidadMedidaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<UnidadMedida>().ToTable(@"unidad_medida", @"dicesa");
            modelBuilder.Entity<UnidadMedida>().Property(x => x.Idunidad).HasColumnName(@"idunidad").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd().HasPrecision(20, 0);
            modelBuilder.Entity<UnidadMedida>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<UnidadMedida>().Property(x => x.Simbolo).HasColumnName(@"simbolo").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<UnidadMedida>().HasKey(@"Idunidad");
        }

        partial void CustomizeUnidadMedidaMapping(ModelBuilder modelBuilder);

        #endregion

        #region Empleado Mapping

        private void EmpleadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Empleado>().ToTable(@"empleado", @"dicesa");
            modelBuilder.Entity<Empleado>().Property(x => x.Idempleado).HasColumnName(@"idempleado").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Empleado>().Property(x => x.Apellido).HasColumnName(@"apellido").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().Property(x => x.Cedula).HasColumnName(@"cedula").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().Property(x => x.Direccion).HasColumnName(@"direccion").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().Property(x => x.FIngreso).HasColumnName(@"f_ingreso").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().Property(x => x.FNacimiento).HasColumnName(@"f_nacimiento").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().Property(x => x.Nombre).HasColumnName(@"nombre").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empleado>().HasKey(@"Idempleado");
        }

        partial void CustomizeEmpleadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Proyecto Mapping

        private void ProyectoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Proyecto>().ToTable(@"proyecto", @"dicesa");
            modelBuilder.Entity<Proyecto>().Property(x => x.Idproyecto).HasColumnName(@"idproyecto").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Proyecto>().Property(x => x.Activo).HasColumnName(@"activo").HasColumnType(@"bit").IsRequired().ValueGeneratedNever().HasPrecision(1);
            modelBuilder.Entity<Proyecto>().Property(x => x.CodigoProyecto).HasColumnName(@"codigo_proyecto").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.DescripcionMezcla).HasColumnName(@"descripcion_mezcla").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.FechaFin).HasColumnName(@"fecha_fin").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.FechaInicio).HasColumnName(@"fecha_inicio").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.FechaMuestreo).HasColumnName(@"fecha_muestreo").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.ProecedenciaConcreto).HasColumnName(@"proecedencia_concreto").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.UbicacionMuestra).HasColumnName(@"ubicacion_muestra").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.UbicacionProyecto).HasColumnName(@"ubicacion_proyecto").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.Idcliente).HasColumnName(@"idcliente").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Proyecto>().Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Proyecto>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Proyecto>().HasKey(@"Idproyecto");
        }

        partial void CustomizeProyectoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Ensayo Mapping

        private void EnsayoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Ensayo>().ToTable(@"ensayo", @"dicesa");
            modelBuilder.Entity<Ensayo>().Property(x => x.Idensayo).HasColumnName(@"idensayo").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Ensayo>().Property(x => x.EdadReal).HasColumnName(@"edad_real").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.FechaIngreso).HasColumnName(@"fecha_ingreso").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.FechaPrevista).HasColumnName(@"fecha_prevista").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.FechaReal).HasColumnName(@"fecha_real").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.Idempleado).HasColumnName(@"idempleado").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.Idtipoensayo).HasColumnName(@"idtipoensayo").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().Property(x => x.Idmuestra).HasColumnName(@"idmuestra").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Ensayo>().HasKey(@"Idensayo");
        }

        partial void CustomizeEnsayoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Muestra Mapping

        private void MuestraMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Muestra>().ToTable(@"muestra", @"dicesa");
            modelBuilder.Entity<Muestra>().Property(x => x.Idmuestra).HasColumnName(@"idmuestra").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Muestra>().Property(x => x.Idproyecto).HasColumnName(@"idproyecto").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.SondeoNumero).HasColumnName(@"sondeo_numero").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(250).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.MuestraNumero).HasColumnName(@"muestra_numero").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(250).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.Coordenadas).HasColumnName(@"coordenadas").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(100).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.LadoBanda).HasColumnName(@"lado_banda").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(250).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.DescripcionMaterial).HasColumnName(@"descripcion_material").HasColumnType(@"text").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.FechaEnsayo).HasColumnName(@"fecha_ensayo").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.CoordeandasZ).HasColumnName(@"coordeandas_z").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.Idempleado).HasColumnName(@"idempleado").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.CodigoIngreso).HasColumnName(@"codigo_ingreso").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Muestra>().Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Muestra>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Muestra>().HasKey(@"Idmuestra");
        }

        partial void CustomizeMuestraMapping(ModelBuilder modelBuilder);

        #endregion

        #region Cliente Mapping

        private void ClienteMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Cliente>().ToTable(@"cliente", @"dicesa");
            modelBuilder.Entity<Cliente>().Property(x => x.Idcliente).HasColumnName(@"idcliente").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Cliente>().Property(x => x.Celular).HasColumnName(@"celular").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Ciudad).HasColumnName(@"ciudad").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Contacto).HasColumnName(@"contacto").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Departamento).HasColumnName(@"departamento").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Direccion).HasColumnName(@"direccion").HasColumnType(@"tinytext").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.FIngreso).HasColumnName(@"f_ingreso").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.NombreAbreviado).HasColumnName(@"nombre_abreviado").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.NombreComercial).HasColumnName(@"nombre_comercial").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Ruc).HasColumnName(@"ruc").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.Telefono).HasColumnName(@"telefono").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Cliente>().Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Cliente>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Cliente>().HasKey(@"Idcliente");
        }

        partial void CustomizeClienteMapping(ModelBuilder modelBuilder);

        #endregion

        #region Usuario Mapping

        private void UsuarioMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Usuario>().ToTable(@"usuario", @"dicesa");
            modelBuilder.Entity<Usuario>().Property(x => x.Idusuario).HasColumnName(@"idusuario").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd().HasPrecision(20, 0);
            modelBuilder.Entity<Usuario>().Property(x => x.Activo).HasColumnName(@"activo").HasColumnType(@"bit").IsRequired().ValueGeneratedNever().HasPrecision(1);
            modelBuilder.Entity<Usuario>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Usuario>().Property(x => x.Nombre).HasColumnName(@"nombre").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Usuario>().Property(x => x.Password).HasColumnName(@"password").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Usuario>().Property(x => x.Titulo).HasColumnName(@"titulo").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Usuario>().Property(x => x.Username).HasColumnName(@"username").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Usuario>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Usuario>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Usuario>().HasKey(@"Idusuario");
        }

        partial void CustomizeUsuarioMapping(ModelBuilder modelBuilder);

        #endregion

        #region ResultadosProctor Mapping

        private void ResultadosProctorMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ResultadosProctor>().ToTable(@"resultados_proctor", @"dicesa");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.Idresultado).HasColumnName(@"idresultado").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.Idensayo).HasColumnName(@"idensayo").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.AguaAgregada).HasColumnName(@"agua_agregada").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoMoldeMaterialHumedo).HasColumnName(@"peso_molde_material_humedo").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoMolde).HasColumnName(@"peso_molde").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoMaterialHumedo).HasColumnName(@"peso_material_humedo").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.VolumenMolde).HasColumnName(@"volumen_molde").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.DensidadHumeda).HasColumnName(@"densidad_humeda").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.TaraNumero).HasColumnName(@"tara_numero").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(50).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.TaraMaterialHumedo).HasColumnName(@"tara_material_humedo").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.TaraMaterialSeco).HasColumnName(@"tara_material_seco").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoAgua).HasColumnName(@"peso_agua").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoTara).HasColumnName(@"peso_tara").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.PesoSueloSeco).HasColumnName(@"peso_suelo_seco").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.ContenidoHumedad).HasColumnName(@"contenido_humedad").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().Property(x => x.DensidadSeca).HasColumnName(@"densidad_seca").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 4).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadosProctor>().HasKey(@"Idresultado");
        }

        partial void CustomizeResultadosProctorMapping(ModelBuilder modelBuilder);

        #endregion

        #region EnsayoProctor Mapping

        private void EnsayoProctorMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EnsayoProctor>().ToTable(@"ensayo_proctor", @"dicesa");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.Idensayo).HasColumnName(@"idensayo").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.Idempleado).HasColumnName(@"idempleado").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(11, 0);
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.Idmuestra).HasColumnName(@"idmuestra").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.FechaEnsayo).HasColumnName(@"fecha_ensayo").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.Norma).HasColumnName(@"norma").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(100).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.MetodoUtilizado).HasColumnName(@"metodo_utilizado").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(50).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.PesoMartilloLb).HasColumnName(@"peso_martillo_lb").HasColumnType(@"float").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.PesoMaterialG).HasColumnName(@"peso_material_g").HasColumnType(@"float").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.TemperaturaSecado).HasColumnName(@"temperatura_secado").HasColumnType(@"float").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.DiametroMoldeCm).HasColumnName(@"diametro_molde_cm").HasColumnType(@"float").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.AlturaMoldeCm).HasColumnName(@"altura_molde_cm").HasColumnType(@"float").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.NumCapas).HasColumnName(@"num_capas").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.NumGolpes).HasColumnName(@"num_golpes").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.TipoProctor).HasColumnName(@"tipo_proctor").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(250).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.DensidadMaxima).HasColumnName(@"densidad_maxima").HasColumnType(@"decimal").ValueGeneratedNever().HasPrecision(18, 4).HasDefaultValueSql(@"0.0000");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.HumedadOptima).HasColumnName(@"humedad_optima").HasColumnType(@"decimal").ValueGeneratedNever().HasPrecision(18, 4).HasDefaultValueSql(@"0.0000");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoProctor>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"datetime").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<EnsayoProctor>().HasKey(@"Idensayo");
        }

        partial void CustomizeEnsayoProctorMapping(ModelBuilder modelBuilder);

        #endregion

        #region TipoEspeciman Mapping

        private void TipoEspecimanMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoEspeciman>().ToTable(@"tipo_especimen", @"dicesa");
            modelBuilder.Entity<TipoEspeciman>().Property(x => x.Idtipo).HasColumnName(@"idtipo").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd().HasPrecision(20, 0);
            modelBuilder.Entity<TipoEspeciman>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<TipoEspeciman>().HasKey(@"Idtipo");
        }

        partial void CustomizeTipoEspecimanMapping(ModelBuilder modelBuilder);

        #endregion

        #region TamanoEspeciman Mapping

        private void TamanoEspecimanMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TamanoEspeciman>().ToTable(@"tamano_especimen", @"dicesa");
            modelBuilder.Entity<TamanoEspeciman>().Property(x => x.Idtamano).HasColumnName(@"idtamano").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<TamanoEspeciman>().Property(x => x.Tamano).HasColumnName(@"tamano").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<TamanoEspeciman>().HasKey(@"Idtamano");
        }

        partial void CustomizeTamanoEspecimanMapping(ModelBuilder modelBuilder);

        #endregion

        #region Resultado Mapping

        private void ResultadoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Resultado>().ToTable(@"resultados", @"dicesa");
            modelBuilder.Entity<Resultado>().Property(x => x.Idresultados).HasColumnName(@"idresultados").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Resultado>().Property(x => x.Disenada).HasColumnName(@"disenada").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Evaluacion).HasColumnName(@"evaluacion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Observacion).HasColumnName(@"observacion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Obtenida).HasColumnName(@"obtenida").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Porcentaje).HasColumnName(@"porcentaje").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Identry).HasColumnName(@"identry").HasColumnType(@"bigint").ValueGeneratedOnAdd().HasPrecision(20, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Resultado>().Property(x => x.Idtipofalla).HasColumnName(@"idtipofalla").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(11, 0);
            modelBuilder.Entity<Resultado>().HasKey(@"Idresultados");
        }

        partial void CustomizeResultadoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Entry Mapping

        private void EntryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Entry>().ToTable(@"entry", @"dicesa");
            modelBuilder.Entity<Entry>().Property(x => x.IdEntry).HasColumnName(@"id_entry").HasColumnType(@"bigint").IsRequired().ValueGeneratedOnAdd().HasPrecision(20, 0);
            modelBuilder.Entity<Entry>().Property(x => x.Altura).HasColumnName(@"altura").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Anchura).HasColumnName(@"anchura").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Area).HasColumnName(@"area").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Carga).HasColumnName(@"carga").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Codigo).HasColumnName(@"codigo").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Densidad).HasColumnName(@"densidad").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Diametro).HasColumnName(@"diametro").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Edad).HasColumnName(@"edad").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(11, 0);
            modelBuilder.Entity<Entry>().Property(x => x.EdadReal).HasColumnName(@"edad_real").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.End).HasColumnName(@"end").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.EndTime).HasColumnName(@"end_time").HasColumnType(@"time").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Estructura).HasColumnName(@"estructura").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.FechaColado).HasColumnName(@"fecha_colado").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.FechaRoturaReal).HasColumnName(@"fecha_rotura_real").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Finalizado).HasColumnName(@"finalizado").HasColumnType(@"bit").IsRequired().ValueGeneratedNever().HasPrecision(1);
            modelBuilder.Entity<Entry>().Property(x => x.FullDay).HasColumnName(@"full_day").HasColumnType(@"bit").ValueGeneratedOnAdd().HasPrecision(1).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Id).HasColumnName(@"id").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Location).HasColumnName(@"location").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.LongitudSoporte).HasColumnName(@"longitud_soporte").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Peso).HasColumnName(@"peso").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.PromedioSoporte).HasColumnName(@"promedio_soporte").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.StarTime).HasColumnName(@"star_time").HasColumnType(@"time").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Start).HasColumnName(@"start").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Title).HasColumnName(@"title").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Volumen).HasColumnName(@"volumen").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(38, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.ZoneId).HasColumnName(@"zone_id").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Idempleado).HasColumnName(@"idempleado").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Idproyecto).HasColumnName(@"idproyecto").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Idtamano).HasColumnName(@"idtamano").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Idtipo).HasColumnName(@"idtipo").HasColumnType(@"bigint").ValueGeneratedOnAdd().HasPrecision(20, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().Property(x => x.Idunidad).HasColumnName(@"idunidad").HasColumnType(@"bigint").ValueGeneratedOnAdd().HasPrecision(20, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Entry>().HasKey(@"IdEntry");
        }

        partial void CustomizeEntryMapping(ModelBuilder modelBuilder);

        #endregion

        #region TipoEnsayo Mapping

        private void TipoEnsayoMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoEnsayo>().ToTable(@"tipo_ensayo", @"dicesa");
            modelBuilder.Entity<TipoEnsayo>().Property(x => x.Idtipoensayo).HasColumnName(@"idtipoensayo").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<TipoEnsayo>().Property(x => x.Descripcion).HasColumnName(@"descripcion").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<TipoEnsayo>().HasKey(@"Idtipoensayo");
        }

        partial void CustomizeTipoEnsayoMapping(ModelBuilder modelBuilder);

        #endregion

        #region Empresa Mapping

        private void EmpresaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Empresa>().ToTable(@"empresa", @"dicesa");
            modelBuilder.Entity<Empresa>().Property(x => x.Idempresa).HasColumnName(@"idempresa").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<Empresa>().Property(x => x.NombreComercial).HasColumnName(@"nombre_comercial").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.NombreAbreviado).HasColumnName(@"nombre_abreviado").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Logo).HasColumnName(@"logo").HasColumnType(@"longblob").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Email).HasColumnName(@"email").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(50).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Telefono).HasColumnName(@"telefono").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Celular).HasColumnName(@"celular").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Direccion).HasColumnName(@"direccion").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.Representante).HasColumnName(@"representante").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.CreatedBy).HasColumnName(@"created_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.CreatedAt).HasColumnName(@"created_at").HasColumnType(@"timestamp").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Empresa>().Property(x => x.UpdatedBy).HasColumnName(@"updated_by").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<Empresa>().Property(x => x.UpdatedAt).HasColumnName(@"updated_at").HasColumnType(@"timestamp").IsRequired().ValueGeneratedOnAdd().HasDefaultValueSql(@"current_timestamp()");
            modelBuilder.Entity<Empresa>().Property(x => x.Activa).HasColumnName(@"activa").HasColumnType(@"tinyint").ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            modelBuilder.Entity<Empresa>().Property(x => x.Selected).HasColumnName(@"selected").HasColumnType(@"tinyint").ValueGeneratedNever().HasPrecision(1, 0).HasDefaultValueSql(@"0");
            modelBuilder.Entity<Empresa>().HasKey(@"Idempresa");
        }

        partial void CustomizeEmpresaMapping(ModelBuilder modelBuilder);

        #endregion

        #region EnsayoHumedad Mapping

        private void EnsayoHumedadMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<EnsayoHumedad>().ToTable(@"ensayo_humedad", @"dicesa");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.Idensayohumedad).HasColumnName(@"idensayohumedad").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.InformeNumero).HasColumnName(@"informe_numero").HasColumnType(@"varchar").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.Idmuestra).HasColumnName(@"idmuestra").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.FechaIngreso).HasColumnName(@"fecha_ingreso").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.DescripcionMaterial).HasColumnName(@"descripcion_material").HasColumnType(@"text").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.FechaEmision).HasColumnName(@"fecha_emision").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.MetodoMuestreo).HasColumnName(@"metodo_muestreo").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.FechaMuestreo).HasColumnName(@"fecha_muestreo").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.FechaInicio).HasColumnName(@"fecha_inicio").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.FechaFin).HasColumnName(@"fecha_fin").HasColumnType(@"date").ValueGeneratedOnAdd().HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.CodigoIngreso).HasColumnName(@"codigo_ingreso").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.Metodo).HasColumnName(@"metodo").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().Property(x => x.RealizadoEn).HasColumnName(@"realizado_en").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<EnsayoHumedad>().HasKey(@"Idensayohumedad");
        }

        partial void CustomizeEnsayoHumedadMapping(ModelBuilder modelBuilder);

        #endregion

        #region ResultadoHumedad Mapping

        private void ResultadoHumedadMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ResultadoHumedad>().ToTable(@"resultado_humedad", @"dicesa");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.Idresultadohumedad).HasColumnName(@"idresultadohumedad").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(11, 0);
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.ProfundidadInicial).HasColumnName(@"profundidad_inicial").HasColumnType(@"decimal").ValueGeneratedNever().HasPrecision(10, 2).HasDefaultValueSql(@"0.00");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.ProfundidadFinal).HasColumnName(@"profundidad_final").HasColumnType(@"decimal").ValueGeneratedNever().HasPrecision(10, 2).HasDefaultValueSql(@"0.00");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.TaraNo).HasColumnName(@"tara_no").HasColumnType(@"varchar").ValueGeneratedOnAdd().HasMaxLength(255).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.PesoTara).HasColumnName(@"peso_tara").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.PesoHumedoTara).HasColumnName(@"peso_humedo_tara").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.PesoSecoTara).HasColumnName(@"peso_seco_tara").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.PesoAgua).HasColumnName(@"peso_agua").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.Humedad).HasColumnName(@"humedad").HasColumnType(@"decimal").ValueGeneratedOnAdd().HasPrecision(10, 2).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.Consecutivo).HasColumnName(@"consecutivo").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().Property(x => x.Idensayohumedad).HasColumnName(@"idensayohumedad").HasColumnType(@"int").ValueGeneratedOnAdd().HasPrecision(11, 0).HasDefaultValueSql(@"NULL");
            modelBuilder.Entity<ResultadoHumedad>().HasKey(@"Idresultadohumedad");
        }

        partial void CustomizeResultadoHumedadMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TipoFalla>().HasMany(x => x.Resultados).WithOne(op => op.TipoFalla).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtipofalla").IsRequired(true);

            modelBuilder.Entity<UnidadMedida>().HasMany(x => x.Entries).WithOne(op => op.UnidadMedida).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idunidad").IsRequired(false);

            modelBuilder.Entity<Empleado>().HasMany(x => x.Ensayos).WithOne(op => op.Empleado).HasForeignKey(@"Idempleado").IsRequired(false);
            modelBuilder.Entity<Empleado>().HasMany(x => x.EnsayoProctors).WithOne(op => op.Empleado).HasForeignKey(@"Idempleado").IsRequired(true);

            modelBuilder.Entity<Proyecto>().HasOne(x => x.Cliente).WithMany(op => op.Proyectos).HasForeignKey(@"Idcliente").IsRequired(false);
            modelBuilder.Entity<Proyecto>().HasMany(x => x.Entries).WithOne(op => op.Proyecto).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idproyecto").IsRequired(false);

            modelBuilder.Entity<Ensayo>().HasOne(x => x.Empleado).WithMany(op => op.Ensayos).HasForeignKey(@"Idempleado").IsRequired(false);
            modelBuilder.Entity<Ensayo>().HasOne(x => x.Muestra).WithMany(op => op.Ensayos).HasForeignKey(@"Idmuestra").IsRequired(false);
            modelBuilder.Entity<Ensayo>().HasOne(x => x.TipoEnsayo).WithMany(op => op.Ensayos).HasForeignKey(@"Idtipoensayo").IsRequired(false);

            modelBuilder.Entity<Muestra>().HasMany(x => x.Ensayos).WithOne(op => op.Muestra).HasForeignKey(@"Idmuestra").IsRequired(false);
            modelBuilder.Entity<Muestra>().HasMany(x => x.EnsayoHumedads).WithOne(op => op.Muestra).HasForeignKey(@"Idmuestra").IsRequired(false);

            modelBuilder.Entity<Cliente>().HasMany(x => x.Proyectos).WithOne(op => op.Cliente).HasForeignKey(@"Idcliente").IsRequired(false);

            modelBuilder.Entity<ResultadosProctor>().HasOne(x => x.EnsayoProctor).WithMany(op => op.ResultadosProctors).HasForeignKey(@"Idensayo").IsRequired(false);

            modelBuilder.Entity<EnsayoProctor>().HasOne(x => x.Empleado).WithMany(op => op.EnsayoProctors).HasForeignKey(@"Idempleado").IsRequired(true);
            modelBuilder.Entity<EnsayoProctor>().HasMany(x => x.ResultadosProctors).WithOne(op => op.EnsayoProctor).HasForeignKey(@"Idensayo").IsRequired(false);

            modelBuilder.Entity<TipoEspeciman>().HasMany(x => x.Entries).WithOne(op => op.TipoEspeciman).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtipo").IsRequired(false);

            modelBuilder.Entity<TamanoEspeciman>().HasMany(x => x.Entries).WithOne(op => op.TamanoEspeciman).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtamano").IsRequired(false);

            modelBuilder.Entity<Resultado>().HasOne(x => x.TipoFalla).WithMany(op => op.Resultados).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtipofalla").IsRequired(true);
            modelBuilder.Entity<Resultado>().HasOne(x => x.Entry).WithMany(op => op.Resultados).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Identry").IsRequired(false);

            modelBuilder.Entity<Entry>().HasMany(x => x.Resultados).WithOne(op => op.Entry).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Identry").IsRequired(false);
            modelBuilder.Entity<Entry>().HasOne(x => x.TamanoEspeciman).WithMany(op => op.Entries).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtamano").IsRequired(false);
            modelBuilder.Entity<Entry>().HasOne(x => x.Proyecto).WithMany(op => op.Entries).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idproyecto").IsRequired(false);
            modelBuilder.Entity<Entry>().HasOne(x => x.TipoEspeciman).WithMany(op => op.Entries).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idtipo").IsRequired(false);
            modelBuilder.Entity<Entry>().HasOne(x => x.UnidadMedida).WithMany(op => op.Entries).OnDelete(DeleteBehavior.Restrict).HasForeignKey(@"Idunidad").IsRequired(false);

            modelBuilder.Entity<TipoEnsayo>().HasMany(x => x.Ensayos).WithOne(op => op.TipoEnsayo).HasForeignKey(@"Idtipoensayo").IsRequired(false);

            modelBuilder.Entity<EnsayoHumedad>().HasOne(x => x.Muestra).WithMany(op => op.EnsayoHumedads).HasForeignKey(@"Idmuestra").IsRequired(false);
            modelBuilder.Entity<EnsayoHumedad>().HasMany(x => x.ResultadoHumedads).WithOne(op => op.EnsayoHumedad).HasForeignKey(@"Idensayohumedad").IsRequired(false);

            modelBuilder.Entity<ResultadoHumedad>().HasOne(x => x.EnsayoHumedad).WithMany(op => op.ResultadoHumedads).HasForeignKey(@"Idensayohumedad").IsRequired(false);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
