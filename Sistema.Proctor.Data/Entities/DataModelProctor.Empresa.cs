//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2/3/2025 5:02:30 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;

namespace Sistema.Proctor.Data.Entities
{
    public partial class Empresa : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private int _Idempresa;

        private string _NombreComercial;

        private string _NombreAbreviado;

        private byte[] _Logo;

        private string _Email;

        private string _Telefono;

        private string _Celular;

        private string _Direccion;

        private string _Representante;

        private int? _CreatedBy;

        private DateTime _CreatedAt;

        private int? _UpdatedBy;

        private DateTime _UpdatedAt;

        private bool? _Activa;

        private bool? _Selected;

        public Empresa()
        {
            this._Activa = false;
            this._Selected = false;
            OnCreated();
        }

        public int Idempresa
        {
            get
            {
                return this._Idempresa;
            }
            set
            {
                if (this._Idempresa != value)
                {
                    this.SendPropertyChanging("Idempresa");
                    this._Idempresa = value;
                    this.SendPropertyChanged("Idempresa");
                }
            }
        }

        public string NombreComercial
        {
            get
            {
                return this._NombreComercial;
            }
            set
            {
                if (this._NombreComercial != value)
                {
                    this.SendPropertyChanging("NombreComercial");
                    this._NombreComercial = value;
                    this.SendPropertyChanged("NombreComercial");
                }
            }
        }

        public string NombreAbreviado
        {
            get
            {
                return this._NombreAbreviado;
            }
            set
            {
                if (this._NombreAbreviado != value)
                {
                    this.SendPropertyChanging("NombreAbreviado");
                    this._NombreAbreviado = value;
                    this.SendPropertyChanged("NombreAbreviado");
                }
            }
        }

        public byte[] Logo
        {
            get
            {
                return this._Logo;
            }
            set
            {
                if (this._Logo != value)
                {
                    this.SendPropertyChanging("Logo");
                    this._Logo = value;
                    this.SendPropertyChanged("Logo");
                }
            }
        }

        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.SendPropertyChanging("Email");
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                }
            }
        }

        public string Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                }
            }
        }

        public string Celular
        {
            get
            {
                return this._Celular;
            }
            set
            {
                if (this._Celular != value)
                {
                    this.SendPropertyChanging("Celular");
                    this._Celular = value;
                    this.SendPropertyChanged("Celular");
                }
            }
        }

        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.SendPropertyChanging("Direccion");
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                }
            }
        }

        public string Representante
        {
            get
            {
                return this._Representante;
            }
            set
            {
                if (this._Representante != value)
                {
                    this.SendPropertyChanging("Representante");
                    this._Representante = value;
                    this.SendPropertyChanged("Representante");
                }
            }
        }

        public int? CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if (this._CreatedBy != value)
                {
                    this.SendPropertyChanging("CreatedBy");
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                }
            }
        }

        public DateTime CreatedAt
        {
            get
            {
                return this._CreatedAt;
            }
            set
            {
                if (this._CreatedAt != value)
                {
                    this.SendPropertyChanging("CreatedAt");
                    this._CreatedAt = value;
                    this.SendPropertyChanged("CreatedAt");
                }
            }
        }

        public int? UpdatedBy
        {
            get
            {
                return this._UpdatedBy;
            }
            set
            {
                if (this._UpdatedBy != value)
                {
                    this.SendPropertyChanging("UpdatedBy");
                    this._UpdatedBy = value;
                    this.SendPropertyChanged("UpdatedBy");
                }
            }
        }

        public DateTime UpdatedAt
        {
            get
            {
                return this._UpdatedAt;
            }
            set
            {
                if (this._UpdatedAt != value)
                {
                    this.SendPropertyChanging("UpdatedAt");
                    this._UpdatedAt = value;
                    this.SendPropertyChanged("UpdatedAt");
                }
            }
        }

        public bool? Activa
        {
            get
            {
                return this._Activa;
            }
            set
            {
                if (this._Activa != value)
                {
                    this.SendPropertyChanging("Activa");
                    this._Activa = value;
                    this.SendPropertyChanged("Activa");
                }
            }
        }

        public bool? Selected
        {
            get
            {
                return this._Selected;
            }
            set
            {
                if (this._Selected != value)
                {
                    this.SendPropertyChanging("Selected");
                    this._Selected = value;
                    this.SendPropertyChanged("Selected");
                }
            }
        }

        #region Extensibility Method Definitions

        partial void OnCreated();

        public override bool Equals(object obj)
        {
          Empresa toCompare = obj as Empresa;
          if (toCompare == null)
          {
            return false;
          }

          if (!Object.Equals(this.Idempresa, toCompare.Idempresa))
            return false;

          return true;
        }

        public override int GetHashCode()
        {
          int hashCode = 13;
          hashCode = (hashCode * 7) + Idempresa.GetHashCode();
          return hashCode;
        }

        #endregion

        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
